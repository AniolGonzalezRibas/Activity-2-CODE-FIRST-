// <auto-generated />
using Activity_2__CODE_FIRST_.MODEL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Activity_2__CODE_FIRST_.Migrations
{
    [DbContext(typeof(ClassicModelDbContext))]
    [Migration("20240226143009_primera")]
    partial class primera
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Customer", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdressLine1")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AdressLine2")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("CreditLimit")
                        .HasColumnType("double");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SalesRepEmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CustomerNumber");

                    b.HasIndex("EmployeeNumber");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OfficeCode1")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("ReportsTo")
                        .HasColumnType("int");

                    b.HasKey("EmployeeNumber");

                    b.HasIndex("OfficeCode1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Office", b =>
                {
                    b.Property<string>("OfficeCode")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AdressLine1")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("AdressLine2")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Territory")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("OfficeCode");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Order", b =>
                {
                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<int>("CustomerNumber1")
                        .HasColumnType("int");

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RequiredDate")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ShippedDate")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("OrderNumber");

                    b.HasIndex("CustomerNumber1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.OrderDetail", b =>
                {
                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<short>("OrderLineNumber")
                        .HasColumnType("smallint");

                    b.Property<double>("PriceEach")
                        .HasColumnType("double");

                    b.Property<string>("ProductProducCode")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("QuantityOrdered")
                        .HasColumnType("int");

                    b.HasKey("OrderNumber", "ProductCode");

                    b.HasIndex("ProductProducCode");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Payment", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<string>("PaymentDate")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CustomerNumber", "CheckNumber");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Product", b =>
                {
                    b.Property<string>("ProducCode")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("double");

                    b.Property<double>("MSRP")
                        .HasColumnType("double");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductLine")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductLinesProductLine")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductScale")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProductVendor")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<short>("QuantityStock")
                        .HasColumnType("smallint");

                    b.HasKey("ProducCode");

                    b.HasIndex("ProductLinesProductLine");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.ProductLines", b =>
                {
                    b.Property<string>("ProductLine")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("HtmlDescription")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TextDescription")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ProductLine");

                    b.ToTable("ProductLiness");
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Customer", b =>
                {
                    b.HasOne("Activity_2__CODE_FIRST_.MODEL.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Employee", b =>
                {
                    b.HasOne("Activity_2__CODE_FIRST_.MODEL.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeCode1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Order", b =>
                {
                    b.HasOne("Activity_2__CODE_FIRST_.MODEL.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerNumber1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.OrderDetail", b =>
                {
                    b.HasOne("Activity_2__CODE_FIRST_.MODEL.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductProducCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Activity_2__CODE_FIRST_.MODEL.Product", b =>
                {
                    b.HasOne("Activity_2__CODE_FIRST_.MODEL.ProductLines", "ProductLines")
                        .WithMany()
                        .HasForeignKey("ProductLinesProductLine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
